##Solrwayback property file

##Url to the UWKA warc-indexer solr-server. Last part is the collectionname
solr.server=http://localhost:8983/solr/netarchivebuilder/

## Link to this webapp itself. BaseURL for link rewrites must be full url.
wayback.baseurl=http://localhost:8080/solrwayback/

#ArcFileLocationResolverInterface implementation.
#Custom class implementation to map the index-time warc filepath (field source_file_path) to the filepath seen the solrwayback machine.  
#If not defined it will use the source_file_path as it is ( IdentityArcFileResolver)
warc.file.resolver.class=dk.kb.netarchivesuite.solrwayback.interfaces.IdentityArcFileResolver

#Optional. Set to true if the index was build with warc-indexer 3.0.0 and not 3.0.1+. ( or if you upgrade from solrwayback release 3.1).
#warcindexer.urlnormaliser.legacy=true

#Collection name. This is the name shown when exporting a page to PID-XML.
pid.collection.name=netarkivet.dk

#Whitelist for hosts when using the socks4 proxy. This will prevent live leaks during playback
#Manuel add the following 2 two LOCAL_IP, LOCAL_HOST_NAME to this white-list. Etc. 173.12.22.11 and thomas-desktop.kb
proxy.allow.hosts=a.tile.openstreetmap.org,b.tile.openstreetmap.org,c.tile.openstreetmap.org,localhost,127.0.0.1

#Without proxy you can still access solrwayback on the default tomcat port
proxy.port=9000

#Used for preview screenshots. Not required, but then screenshots will not work.
#Uses headless chrome browser. Chrome must be installed on the OS. The chrome.command is typical:
#Linux: chrome
#Ubunutu: chrome.command=chromium-browser
#Windows: chrome.command="C:\Program Files (x86)\Google\Chrome\Application\chrome"
#MAC1: chrome.command=/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome
#MAC2: chrome.command="open -b com.google.Chrome"
#example command: chromium-browser --headless --disable-gpu --ipc-connection-timeout=3000 --screenshot=test.png --window-size=1280,1024 https://www.google.com/
chrome.command=chromium-browser

#This will work on linux. For windows you can use screenshot.temp.imagedir=C:\temp\ , create the temp folder first 
screenshot.temp.imagedir=/tmp/

#Timeout in seconds. Optional, 10 seconds is default. 
screenshot.preview.timeout=10